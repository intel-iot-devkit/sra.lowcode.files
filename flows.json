[
    {
        "id": "31f9ffb72408a03b",
        "type": "tab",
        "label": "Smart Retail Analytics v3.9",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "80e93e4c202f25c0",
        "type": "tab",
        "label": "Geti : Create Project",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2603fefaa5a0af92",
        "type": "tab",
        "label": "Geti : Get Project",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d8a08ff479a916ea",
        "type": "tab",
        "label": "Geti : Upload Dataset",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0f662d7e50bdd921",
        "type": "tab",
        "label": "Geti : Train",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e87e2ea76470259e",
        "type": "tab",
        "label": "Geti : Export Model",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fa520817cefa969d",
        "type": "subflow",
        "name": "ErrorHandler",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 140,
                "wires": [
                    {
                        "id": "44679d4fa7a582d1"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "57a8bacd1de18feb",
        "type": "junction",
        "z": "31f9ffb72408a03b",
        "x": 260,
        "y": 280,
        "wires": [
            [
                "b89e800e726bf747",
                "3b313e9df76df44f",
                "6b79d2ba57501732"
            ]
        ]
    },
    {
        "id": "3b313e9df76df44f",
        "type": "junction",
        "z": "31f9ffb72408a03b",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "aa8997e3ca564f01",
                "c40f22d392a22b42",
                "7c926e04a5c61cd3"
            ]
        ]
    },
    {
        "id": "d99badea3008f286",
        "type": "junction",
        "z": "31f9ffb72408a03b",
        "x": 1100,
        "y": 280,
        "wires": [
            [
                "d15396f52a782142"
            ]
        ]
    },
    {
        "id": "4cbb7822169a3c10",
        "type": "mqtt-broker",
        "name": "evam-mqtt",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "eac5fbd168fd1148",
        "type": "detect-shopper-server",
        "name": "Edge-Video-Analytics-Server",
        "host": "EVAM_DNS",
        "hostInputType": "env",
        "port": "8080"
    },
    {
        "id": "881e97743b1fc973",
        "type": "shopper-pose-mood-server",
        "name": "Edge-Video-Analytics-Server",
        "host": "EVAM_DNS",
        "hostInputType": "env",
        "port": "8080"
    },
    {
        "id": "323f6456f36d303c",
        "type": "shelf-object-count-server",
        "name": "Edge-Video-Analytics-Server",
        "host": "EVAM_DNS",
        "hostInputType": "env",
        "port": "8080"
    },
    {
        "id": "dcdaba92cc10a631",
        "type": "debug",
        "z": "fa520817cefa969d",
        "name": "Server Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "44679d4fa7a582d1",
        "type": "switch",
        "z": "fa520817cefa969d",
        "name": "Handle Error",
        "property": "payload.errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "dcdaba92cc10a631"
            ],
            [
                "e8ac2b407474c28a",
                "089ff6cac2c8acce"
            ]
        ]
    },
    {
        "id": "e8ac2b407474c28a",
        "type": "switch",
        "z": "fa520817cefa969d",
        "name": "if error thrown",
        "property": "payload.errors[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "33f5ddf48130b7d1"
            ]
        ]
    },
    {
        "id": "33f5ddf48130b7d1",
        "type": "debug",
        "z": "fa520817cefa969d",
        "name": "Export Error 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.errors[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "089ff6cac2c8acce",
        "type": "switch",
        "z": "fa520817cefa969d",
        "name": "if another error thrown",
        "property": "payload.errors[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 460,
        "y": 240,
        "wires": [
            [
                "13a3c316dd147dcd"
            ]
        ]
    },
    {
        "id": "13a3c316dd147dcd",
        "type": "debug",
        "z": "fa520817cefa969d",
        "name": "Export Error 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.errors[1]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 240,
        "wires": []
    },
    {
        "id": "9101331d3f3a1032",
        "type": "inject",
        "z": "31f9ffb72408a03b",
        "name": "Configure Hosts",
        "props": [
            {
                "p": "broker['broker']",
                "v": "MQTT_DNS",
                "vt": "env"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "preprocessHost",
                "v": "\"http://\" & $env('PREPROCESS_DNS') & \":5009\"",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sra/people",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "57a8bacd1de18feb"
            ]
        ]
    },
    {
        "id": "d15396f52a782142",
        "type": "debug",
        "z": "31f9ffb72408a03b",
        "name": "Debug Pipeline ID",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 280,
        "wires": []
    },
    {
        "id": "d03d595b65c409ba",
        "type": "http request",
        "z": "31f9ffb72408a03b",
        "name": "Pre-Process: Resize",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{preprocessHost}}}/resize",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 680,
        "y": 180,
        "wires": [
            [
                "8fe94067a5bf8f82"
            ]
        ]
    },
    {
        "id": "7c926e04a5c61cd3",
        "type": "change",
        "z": "31f9ffb72408a03b",
        "name": "Video Source 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"video\":\"https://github.com/intel-iot-devkit/sample-videos/raw/master/face-demographics-walking.mp4\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "d03d595b65c409ba"
            ]
        ]
    },
    {
        "id": "aa8997e3ca564f01",
        "type": "change",
        "z": "31f9ffb72408a03b",
        "name": "Video Source 3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"video\":\"https://github.com/chandrakantkhandelwal/demo_videos/raw/main/sample_videos/bottle-object_detection.mp4\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 380,
        "wires": [
            [
                "87996b2f510f8f16"
            ]
        ]
    },
    {
        "id": "c40f22d392a22b42",
        "type": "change",
        "z": "31f9ffb72408a03b",
        "name": "Video Source 2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"video\":\"https://github.com/intel-iot-devkit/sample-videos/raw/master/head-pose-face-detection-female-and-male.mp4\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 280,
        "wires": [
            [
                "55b5b5ea95e0c9d8"
            ]
        ]
    },
    {
        "id": "55b5b5ea95e0c9d8",
        "type": "http request",
        "z": "31f9ffb72408a03b",
        "name": "Pre-Process: Resize",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{preprocessHost}}}/resize",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 680,
        "y": 280,
        "wires": [
            [
                "2b4707a6b5a0bf4c"
            ]
        ]
    },
    {
        "id": "87996b2f510f8f16",
        "type": "http request",
        "z": "31f9ffb72408a03b",
        "name": "Pre-Process: Resize",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{preprocessHost}}}/resize",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 680,
        "y": 380,
        "wires": [
            [
                "1c6cdbccadccc8f5"
            ]
        ]
    },
    {
        "id": "d9f0fd49cc4b7384",
        "type": "mqtt in",
        "z": "31f9ffb72408a03b",
        "name": "Get Metadata : MQTT",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "4cbb7822169a3c10",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 640,
        "y": 480,
        "wires": [
            [
                "8359086864c5d889"
            ]
        ]
    },
    {
        "id": "2c25aba29482e916",
        "type": "switch",
        "z": "31f9ffb72408a03b",
        "name": "If 2 person detected",
        "property": "payload.num_of_person",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1120,
        "y": 480,
        "wires": [
            [
                "4eb5527f54fa7fd5"
            ]
        ]
    },
    {
        "id": "4eb5527f54fa7fd5",
        "type": "debug",
        "z": "31f9ffb72408a03b",
        "name": "Debug People Count",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 580,
        "wires": []
    },
    {
        "id": "6b79d2ba57501732",
        "type": "change",
        "z": "31f9ffb72408a03b",
        "name": "Action: Subscribe",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "subscribe",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 480,
        "wires": [
            [
                "d9f0fd49cc4b7384"
            ]
        ]
    },
    {
        "id": "b89e800e726bf747",
        "type": "change",
        "z": "31f9ffb72408a03b",
        "name": "Action: Connect",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "connect",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "broker['force']",
                "pt": "msg",
                "to": "true",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 80,
        "wires": [
            [
                "5f4ba087f056e807"
            ]
        ]
    },
    {
        "id": "5f4ba087f056e807",
        "type": "mqtt out",
        "z": "31f9ffb72408a03b",
        "name": "Connect to MQTT Broker",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "4cbb7822169a3c10",
        "x": 650,
        "y": 80,
        "wires": []
    },
    {
        "id": "8fe94067a5bf8f82",
        "type": "intel-detect-shopper",
        "z": "31f9ffb72408a03b",
        "name": "Detect Shopper",
        "server": "eac5fbd168fd1148",
        "video": "payload.video_file",
        "videoInputType": "msg",
        "selectedMetadataOption": "mqtt",
        "mqttHost": "MQTT_DNS",
        "mqttHostType": "env",
        "mqttPort": "1883",
        "mqttTopic": "sra/people",
        "mqttTopicType": "str",
        "kafkaHost": "",
        "kafkaHostType": "str",
        "kafkaPort": "",
        "kafkaTopic": "",
        "kafkaTopicType": "str",
        "selectedFrameOption": "",
        "rtspPath": "",
        "rtspPathType": "str",
        "peerid": "",
        "peeridType": "str",
        "metadata": "mqtt",
        "frame": "",
        "detectionDevice": "",
        "zeromqServer": "\"tcp://\" & $env('SERVER_DNS') & \":5555\"",
        "zeromqServerType": "jsonata",
        "useModelInstanceId": true,
        "modelInstanceId": "person",
        "modelInstanceIdType": "str",
        "useNewModel": "",
        "newDetectionModel": "",
        "newDetectionModelType": "str",
        "newDetectionModelProc": "",
        "newDetectionModelProcType": "str",
        "checkStatus": "",
        "x": 920,
        "y": 180,
        "wires": [
            [
                "d99badea3008f286"
            ]
        ]
    },
    {
        "id": "2b4707a6b5a0bf4c",
        "type": "intel-shopper-pose-mood",
        "z": "31f9ffb72408a03b",
        "name": "Shopper Pose/Mood",
        "server": "881e97743b1fc973",
        "video": "payload.video_file",
        "videoInputType": "msg",
        "selectedMetadataOption": "",
        "mqttHost": "",
        "mqttHostType": "str",
        "mqttPort": "",
        "mqttTopic": "",
        "mqttTopicType": "str",
        "kafkaHost": "",
        "kafkaHostType": "str",
        "kafkaPort": "",
        "kafkaTopic": "",
        "kafkaTopicType": "str",
        "selectedFrameOption": "",
        "rtspPath": "",
        "rtspPathType": "str",
        "peerid": "",
        "peeridType": "str",
        "metadata": "",
        "frame": "",
        "detectionDevice": "",
        "zeromqServer": "\"tcp://\" & $env('SERVER_DNS') & \":5555\"",
        "zeromqServerType": "jsonata",
        "useModelInstanceId": true,
        "detectionInstanceId": "shopper",
        "detectionInstanceIdType": "str",
        "inferenceInstanceId": "pose",
        "inferenceInstanceIdType": "str",
        "classificationInstanceId": "mood",
        "classificationInstanceIdType": "str",
        "useNewModel": "",
        "newDetectionModel": "",
        "newDetectionModelType": "str",
        "newDetectionModelProc": "",
        "newDetectionModelProcType": "str",
        "newInferenceModel": "",
        "newInferenceModelType": "str",
        "newClassificationModel": "",
        "newClassificationModelType": "str",
        "newClassificationModelProc": "",
        "newClassificationModelProcType": "str",
        "checkStatus": "",
        "x": 940,
        "y": 280,
        "wires": [
            [
                "d99badea3008f286"
            ]
        ]
    },
    {
        "id": "1c6cdbccadccc8f5",
        "type": "intel-shelf-object-count",
        "z": "31f9ffb72408a03b",
        "name": "",
        "server": "323f6456f36d303c",
        "video": "payload.video_file",
        "videoInputType": "msg",
        "selectedMetadataOption": "",
        "mqttHost": "",
        "mqttHostType": "str",
        "mqttPort": "",
        "mqttTopic": "",
        "mqttTopicType": "str",
        "kafkaHost": "",
        "kafkaHostType": "str",
        "kafkaPort": "",
        "kafkaTopic": "",
        "kafkaTopicType": "str",
        "selectedFrameOption": "",
        "rtspPath": "",
        "rtspPathType": "str",
        "peerid": "",
        "peeridType": "str",
        "metadata": "",
        "frame": "",
        "detectionDevice": "",
        "zeromqServer": "\"tcp://\" & $env('SERVER_DNS') & \":5555\"",
        "zeromqServerType": "jsonata",
        "useModelInstanceId": false,
        "modelInstanceId": "",
        "modelInstanceIdType": "str",
        "useNewModel": false,
        "newDetectionModel": "",
        "newDetectionModelType": "str",
        "newDetectionModelProc": "",
        "newDetectionModelProcType": "str",
        "checkStatus": "",
        "x": 930,
        "y": 380,
        "wires": [
            [
                "d99badea3008f286"
            ]
        ]
    },
    {
        "id": "8359086864c5d889",
        "type": "function",
        "z": "31f9ffb72408a03b",
        "name": "Count People",
        "func": "/* Counting people from Intel EVAM inference */\nlet count = 0;\nconst getCount = (elem) => {\n    if (elem.detection.label_id === 1) {\n        count++;\n    }\n};\n\nconst message = msg.payload;\nconst src = message.source;\nconst video = src.substr(src.lastIndexOf('/') + 1, src.length);\nmessage.objects.forEach(getCount);\nmsg.payload = { num_of_person: count,  video_src: video };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 480,
        "wires": [
            [
                "2c25aba29482e916"
            ]
        ]
    },
    {
        "id": "81a4ef3fed0d408c",
        "type": "inject",
        "z": "80e93e4c202f25c0",
        "name": "Config API",
        "props": [
            {
                "p": "host",
                "v": "MLOPS_BUILD",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 240,
        "wires": [
            [
                "9843b435e22f4f33"
            ]
        ]
    },
    {
        "id": "6172107409fbb53c",
        "type": "http request",
        "z": "80e93e4c202f25c0",
        "name": "Create Project",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{host}}}:8000/projects?project_name={{{project_name}}}&type={{{type}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 640,
        "y": 240,
        "wires": [
            [
                "a0bf0899a4f02a23"
            ]
        ]
    },
    {
        "id": "9843b435e22f4f33",
        "type": "change",
        "z": "80e93e4c202f25c0",
        "name": "Set Params",
        "rules": [
            {
                "t": "set",
                "p": "project_name",
                "pt": "msg",
                "to": "object_detection",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"labels\":[\"Bottle\"]}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "Detection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "6172107409fbb53c"
            ]
        ]
    },
    {
        "id": "a0bf0899a4f02a23",
        "type": "switch",
        "z": "80e93e4c202f25c0",
        "name": "Check Status",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 240,
        "wires": [
            [
                "a4cf5d906fe4b0a7"
            ],
            [
                "ab070c5bf65b0cf7"
            ]
        ]
    },
    {
        "id": "ab070c5bf65b0cf7",
        "type": "debug",
        "z": "80e93e4c202f25c0",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 300,
        "wires": []
    },
    {
        "id": "a4cf5d906fe4b0a7",
        "type": "debug",
        "z": "80e93e4c202f25c0",
        "name": "Success",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 180,
        "wires": []
    },
    {
        "id": "23ec9b9fe7ea73b4",
        "type": "inject",
        "z": "2603fefaa5a0af92",
        "name": "Config API",
        "props": [
            {
                "p": "host",
                "v": "MLOPS_BUILD",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "027b9079396914ef"
            ]
        ]
    },
    {
        "id": "027b9079396914ef",
        "type": "change",
        "z": "2603fefaa5a0af92",
        "name": "Set Project Name",
        "rules": [
            {
                "t": "set",
                "p": "project_name",
                "pt": "msg",
                "to": "object_detection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 240,
        "wires": [
            [
                "3b98063d7d873010"
            ]
        ]
    },
    {
        "id": "3b98063d7d873010",
        "type": "http request",
        "z": "2603fefaa5a0af92",
        "name": "Get Project Detail",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{host}}}:8000/projects/{{{project_name}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 240,
        "wires": [
            [
                "0d8c5508d98fe663"
            ]
        ]
    },
    {
        "id": "0d8c5508d98fe663",
        "type": "switch",
        "z": "2603fefaa5a0af92",
        "name": "Check Status",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 240,
        "wires": [
            [
                "07abf5246635079a"
            ],
            [
                "446c22390da784d0"
            ]
        ]
    },
    {
        "id": "446c22390da784d0",
        "type": "debug",
        "z": "2603fefaa5a0af92",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 300,
        "wires": []
    },
    {
        "id": "07abf5246635079a",
        "type": "debug",
        "z": "2603fefaa5a0af92",
        "name": "Success",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 180,
        "wires": []
    },
    {
        "id": "925d42b16d049acb",
        "type": "change",
        "z": "d8a08ff479a916ea",
        "name": "Set Params",
        "rules": [
            {
                "t": "set",
                "p": "option",
                "pt": "msg",
                "to": "Replace",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "project_name",
                "pt": "msg",
                "to": "object_detection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "fb53226335d81f65"
            ]
        ]
    },
    {
        "id": "fb53226335d81f65",
        "type": "http request",
        "z": "d8a08ff479a916ea",
        "name": "Upload Dataset",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{host}}}:8000/projects/{{{project_name}}}/dataset?option={{{option}}}&dir_path={{{dir_path}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 560,
        "y": 260,
        "wires": [
            [
                "12bb3122363c8062"
            ]
        ]
    },
    {
        "id": "f8a6b3988cf11d32",
        "type": "inject",
        "z": "d8a08ff479a916ea",
        "name": "Config API",
        "props": [
            {
                "p": "host",
                "v": "MLOPS_BUILD",
                "vt": "env"
            },
            {
                "p": "dir_path",
                "v": "/data/sra/dataset/<dataset_name>",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "925d42b16d049acb"
            ]
        ]
    },
    {
        "id": "12bb3122363c8062",
        "type": "switch",
        "z": "d8a08ff479a916ea",
        "name": "Check Status",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 260,
        "wires": [
            [
                "fabaf413a56efa30"
            ],
            [
                "344239c67b237360"
            ]
        ]
    },
    {
        "id": "fabaf413a56efa30",
        "type": "debug",
        "z": "d8a08ff479a916ea",
        "name": "Success",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 180,
        "wires": []
    },
    {
        "id": "344239c67b237360",
        "type": "debug",
        "z": "d8a08ff479a916ea",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "23c7ee17daefd68c",
        "type": "change",
        "z": "0f662d7e50bdd921",
        "name": "Set Params",
        "rules": [
            {
                "t": "set",
                "p": "model_type",
                "pt": "msg",
                "to": "SSD",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "project_name",
                "pt": "msg",
                "to": "object_detection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "9a76ec6ceb119b6a"
            ]
        ]
    },
    {
        "id": "9a76ec6ceb119b6a",
        "type": "http request",
        "z": "0f662d7e50bdd921",
        "name": "Start Training",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{host}}}:8000/projects/{{{project_name}}}/train?model_type={{{model_type}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 240,
        "wires": [
            [
                "e4facb6a2a5e60f0"
            ]
        ]
    },
    {
        "id": "fdc6d28bfe6a7bb7",
        "type": "inject",
        "z": "0f662d7e50bdd921",
        "name": "Config API",
        "props": [
            {
                "p": "host",
                "v": "MLOPS_BUILD",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "23c7ee17daefd68c"
            ]
        ]
    },
    {
        "id": "e4facb6a2a5e60f0",
        "type": "switch",
        "z": "0f662d7e50bdd921",
        "name": "Check Status",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 240,
        "wires": [
            [
                "6c2dd0a2532fb95e"
            ],
            [
                "0e7ad296d1ac2522"
            ]
        ]
    },
    {
        "id": "6c2dd0a2532fb95e",
        "type": "debug",
        "z": "0f662d7e50bdd921",
        "name": "Success",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 160,
        "wires": []
    },
    {
        "id": "0e7ad296d1ac2522",
        "type": "debug",
        "z": "0f662d7e50bdd921",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "40d448fbc7cbb2a8",
        "type": "inject",
        "z": "e87e2ea76470259e",
        "name": "Set Params",
        "props": [
            {
                "p": "pipelineName",
                "v": "yolo-v2-gvapython",
                "vt": "str"
            },
            {
                "p": "modelName",
                "v": "SSD_1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "ad247c46bbcf31a0"
            ]
        ]
    },
    {
        "id": "a9da33b2072d2f2f",
        "type": "http request",
        "z": "e87e2ea76470259e",
        "name": "Enable Model",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "localhost:4000/enableModel",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 460,
        "y": 240,
        "wires": [
            [
                "be07e028f92f9c0e"
            ]
        ]
    },
    {
        "id": "ad247c46bbcf31a0",
        "type": "change",
        "z": "e87e2ea76470259e",
        "name": "Config",
        "rules": [
            {
                "t": "set",
                "p": "payload['pipelineName']",
                "pt": "msg",
                "to": "pipelineName",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload['modelName']",
                "pt": "msg",
                "to": "modelName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 240,
        "wires": [
            [
                "a9da33b2072d2f2f"
            ]
        ]
    },
    {
        "id": "be07e028f92f9c0e",
        "type": "switch",
        "z": "e87e2ea76470259e",
        "name": "Check Status",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 240,
        "wires": [
            [
                "30655c0f5d38e995"
            ],
            [
                "48d0bfc9e13ebe08"
            ]
        ]
    },
    {
        "id": "30655c0f5d38e995",
        "type": "http request",
        "z": "e87e2ea76470259e",
        "name": "Reset Service",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:4000/restartEvam",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 880,
        "y": 120,
        "wires": [
            [
                "4742a1f03cf9f108"
            ]
        ]
    },
    {
        "id": "4742a1f03cf9f108",
        "type": "debug",
        "z": "e87e2ea76470259e",
        "name": "Status: Export Model",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "48d0bfc9e13ebe08",
        "type": "subflow:fa520817cefa969d",
        "z": "e87e2ea76470259e",
        "name": "Handle Error",
        "x": 870,
        "y": 320,
        "wires": []
    }
]